{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# BTT AI Accenture B's AI Studio Project\n","- **Date:** 09/09/2023\n","- **Author of this notebook:** the team\n","- **Members:**\n","  - Alice Huang\n","  - Prakriti Pragaya\n","  - Rongzi Xie\n","  - Sarah Mian\n","  - Sofia Kobayashi\n","  - Srishti Kundu\n","- **Description:** Cleaning our untouched Sephora data\n","\n","<u>**Table of Contents**</u>\n","1. Reading in Sephora Data"],"metadata":{"id":"tLHiVzJVF_JP"}},{"cell_type":"code","source":["# Imports\n","import pandas as pd\n","import numpy as np\n","\n","from google.colab import drive\n","drive.mount('/content/drive/') # this makes your Drive appear in 'content' folder"],"metadata":{"id":"v5FtZFTv8NEA","executionInfo":{"status":"ok","timestamp":1696889601628,"user_tz":240,"elapsed":18941,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"535c92e6-b78e-493e-dea4-2561864d408d","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}]},{"cell_type":"markdown","source":["<a id=\"sec1\"></a>\n","### 1. Reading in Sephora Data\n","- Make sure you've made the 'bttai_accenture' folder shortcut\n","- Make sure it's named 'bttai_accenture' and directly in your Drive\n","- Make you have this exact file path: 'content/drive/MyDrive/bttai_accenture/Data Cleaning/sephora_data/', check in the 'files' sidebar to the left"],"metadata":{"id":"BH-eD93bHEfx"}},{"cell_type":"code","source":["# WARNING: this block should take a minute at most to run\n","# Read in product information CSV\n","product_df = pd.read_csv('/content/drive/MyDrive/Accenture (BOS) - Improving Customer Experience in Skincare Through ML-Based Product Recommendations (Team B)/Data Cleaning/sephora_data/product_info.csv',\n","                         index_col=0)\n","\n","# Read in all 5 product review CSVs & combine into 1 DF\n","\n","product_df.shape"],"metadata":{"id":"kdnqexzh7Gez","executionInfo":{"status":"ok","timestamp":1696889603337,"user_tz":240,"elapsed":1712,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"07f4480c-59b8-4edc-db76-b1a209f1d02c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(8494, 26)"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["product_df.head(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":349},"id":"JxMbhThMMx3B","executionInfo":{"status":"ok","timestamp":1696889603338,"user_tz":240,"elapsed":8,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"c1661244-7291-4cd1-aef0-cfaf627a9f6a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       product_name  brand_id brand_name  loves_count  rating  \\\n","product_id                                                                      \n","P473671     Fragrance Discovery Set      6342      19-69         6320  3.6364   \n","P473668     La Habana Eau de Parfum      6342      19-69         3827  4.1538   \n","\n","            reviews            size                      variation_type  \\\n","product_id                                                                \n","P473671        11.0             NaN                                 NaN   \n","P473668        13.0  3.4 oz/ 100 mL  Size + Concentration + Formulation   \n","\n","           variation_value variation_desc  ... online_only  out_of_stock  \\\n","product_id                                 ...                             \n","P473671                NaN            NaN  ...           1             0   \n","P473668     3.4 oz/ 100 mL            NaN  ...           1             0   \n","\n","            sephora_exclusive  \\\n","product_id                      \n","P473671                     0   \n","P473668                     0   \n","\n","                                                   highlights  \\\n","product_id                                                      \n","P473671     ['Unisex/ Genderless Scent', 'Warm &Spicy Scen...   \n","P473668     ['Unisex/ Genderless Scent', 'Layerable Scent'...   \n","\n","            primary_category  secondary_category  tertiary_category  \\\n","product_id                                                            \n","P473671            Fragrance   Value & Gift Sets  Perfume Gift Sets   \n","P473668            Fragrance               Women            Perfume   \n","\n","            child_count  child_max_price child_min_price  \n","product_id                                                \n","P473671               0              NaN             NaN  \n","P473668               2             85.0            30.0  \n","\n","[2 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-0bc742b1-0286-43e7-be43-9f9f5f8e144f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>product_name</th>\n","      <th>brand_id</th>\n","      <th>brand_name</th>\n","      <th>loves_count</th>\n","      <th>rating</th>\n","      <th>reviews</th>\n","      <th>size</th>\n","      <th>variation_type</th>\n","      <th>variation_value</th>\n","      <th>variation_desc</th>\n","      <th>...</th>\n","      <th>online_only</th>\n","      <th>out_of_stock</th>\n","      <th>sephora_exclusive</th>\n","      <th>highlights</th>\n","      <th>primary_category</th>\n","      <th>secondary_category</th>\n","      <th>tertiary_category</th>\n","      <th>child_count</th>\n","      <th>child_max_price</th>\n","      <th>child_min_price</th>\n","    </tr>\n","    <tr>\n","      <th>product_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>P473671</th>\n","      <td>Fragrance Discovery Set</td>\n","      <td>6342</td>\n","      <td>19-69</td>\n","      <td>6320</td>\n","      <td>3.6364</td>\n","      <td>11.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Unisex/ Genderless Scent', 'Warm &amp;Spicy Scen...</td>\n","      <td>Fragrance</td>\n","      <td>Value &amp; Gift Sets</td>\n","      <td>Perfume Gift Sets</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>P473668</th>\n","      <td>La Habana Eau de Parfum</td>\n","      <td>6342</td>\n","      <td>19-69</td>\n","      <td>3827</td>\n","      <td>4.1538</td>\n","      <td>13.0</td>\n","      <td>3.4 oz/ 100 mL</td>\n","      <td>Size + Concentration + Formulation</td>\n","      <td>3.4 oz/ 100 mL</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Unisex/ Genderless Scent', 'Layerable Scent'...</td>\n","      <td>Fragrance</td>\n","      <td>Women</td>\n","      <td>Perfume</td>\n","      <td>2</td>\n","      <td>85.0</td>\n","      <td>30.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2 rows Ã— 26 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0bc742b1-0286-43e7-be43-9f9f5f8e144f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0bc742b1-0286-43e7-be43-9f9f5f8e144f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0bc742b1-0286-43e7-be43-9f9f5f8e144f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2c88477d-7899-43ef-8ec5-b7cc2cf3e0b3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2c88477d-7899-43ef-8ec5-b7cc2cf3e0b3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2c88477d-7899-43ef-8ec5-b7cc2cf3e0b3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["###Simple Overview\n","####Author: Rongzi Xie"],"metadata":{"id":"42k0axb81N9b"}},{"cell_type":"code","source":["product_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"VOjYf7Mv1NkM","executionInfo":{"status":"ok","timestamp":1696889603523,"user_tz":240,"elapsed":191,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"07b7ccc3-1204-47b1-ffde-8e1f41c0b86b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          brand_id   loves_count       rating       reviews    price_usd  \\\n","count  8494.000000  8.494000e+03  8216.000000   8216.000000  8494.000000   \n","mean   5422.440546  2.917957e+04     4.194513    448.545521    51.655595   \n","std    1709.595957  6.609212e+04     0.516694   1101.982529    53.669234   \n","min    1063.000000  0.000000e+00     1.000000      1.000000     3.000000   \n","25%    5333.000000  3.758000e+03     3.981725     26.000000    25.000000   \n","50%    6157.500000  9.880000e+03     4.289350    122.000000    35.000000   \n","75%    6328.000000  2.684125e+04     4.530525    418.000000    58.000000   \n","max    8020.000000  1.401068e+06     5.000000  21281.000000  1900.000000   \n","\n","       value_price_usd  sale_price_usd  limited_edition          new  \\\n","count       451.000000      270.000000      8494.000000  8494.000000   \n","mean         91.168537       20.207889         0.070285     0.071698   \n","std          79.195631       24.327352         0.255642     0.258002   \n","min           0.000000        1.750000         0.000000     0.000000   \n","25%          45.000000        8.000000         0.000000     0.000000   \n","50%          67.000000       14.000000         0.000000     0.000000   \n","75%         108.500000       25.000000         0.000000     0.000000   \n","max         617.000000      320.000000         1.000000     1.000000   \n","\n","       online_only  out_of_stock  sephora_exclusive  child_count  \\\n","count  8494.000000   8494.000000        8494.000000  8494.000000   \n","mean      0.219096      0.073699           0.279374     1.631622   \n","std       0.413658      0.261296           0.448718     5.379470   \n","min       0.000000      0.000000           0.000000     0.000000   \n","25%       0.000000      0.000000           0.000000     0.000000   \n","50%       0.000000      0.000000           0.000000     0.000000   \n","75%       0.000000      0.000000           1.000000     1.000000   \n","max       1.000000      1.000000           1.000000   105.000000   \n","\n","       child_max_price  child_min_price  \n","count      2754.000000      2754.000000  \n","mean         53.792023        39.665802  \n","std          58.765894        38.685720  \n","min           3.000000         3.000000  \n","25%          22.000000        19.000000  \n","50%          32.000000        28.000000  \n","75%          59.000000        42.000000  \n","max         570.000000       400.000000  "],"text/html":["\n","  <div id=\"df-79b359f3-4b73-4c1b-bd1d-172d9c084ffc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>brand_id</th>\n","      <th>loves_count</th>\n","      <th>rating</th>\n","      <th>reviews</th>\n","      <th>price_usd</th>\n","      <th>value_price_usd</th>\n","      <th>sale_price_usd</th>\n","      <th>limited_edition</th>\n","      <th>new</th>\n","      <th>online_only</th>\n","      <th>out_of_stock</th>\n","      <th>sephora_exclusive</th>\n","      <th>child_count</th>\n","      <th>child_max_price</th>\n","      <th>child_min_price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>8494.000000</td>\n","      <td>8.494000e+03</td>\n","      <td>8216.000000</td>\n","      <td>8216.000000</td>\n","      <td>8494.000000</td>\n","      <td>451.000000</td>\n","      <td>270.000000</td>\n","      <td>8494.000000</td>\n","      <td>8494.000000</td>\n","      <td>8494.000000</td>\n","      <td>8494.000000</td>\n","      <td>8494.000000</td>\n","      <td>8494.000000</td>\n","      <td>2754.000000</td>\n","      <td>2754.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5422.440546</td>\n","      <td>2.917957e+04</td>\n","      <td>4.194513</td>\n","      <td>448.545521</td>\n","      <td>51.655595</td>\n","      <td>91.168537</td>\n","      <td>20.207889</td>\n","      <td>0.070285</td>\n","      <td>0.071698</td>\n","      <td>0.219096</td>\n","      <td>0.073699</td>\n","      <td>0.279374</td>\n","      <td>1.631622</td>\n","      <td>53.792023</td>\n","      <td>39.665802</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1709.595957</td>\n","      <td>6.609212e+04</td>\n","      <td>0.516694</td>\n","      <td>1101.982529</td>\n","      <td>53.669234</td>\n","      <td>79.195631</td>\n","      <td>24.327352</td>\n","      <td>0.255642</td>\n","      <td>0.258002</td>\n","      <td>0.413658</td>\n","      <td>0.261296</td>\n","      <td>0.448718</td>\n","      <td>5.379470</td>\n","      <td>58.765894</td>\n","      <td>38.685720</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1063.000000</td>\n","      <td>0.000000e+00</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>1.750000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>5333.000000</td>\n","      <td>3.758000e+03</td>\n","      <td>3.981725</td>\n","      <td>26.000000</td>\n","      <td>25.000000</td>\n","      <td>45.000000</td>\n","      <td>8.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>22.000000</td>\n","      <td>19.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>6157.500000</td>\n","      <td>9.880000e+03</td>\n","      <td>4.289350</td>\n","      <td>122.000000</td>\n","      <td>35.000000</td>\n","      <td>67.000000</td>\n","      <td>14.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>32.000000</td>\n","      <td>28.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6328.000000</td>\n","      <td>2.684125e+04</td>\n","      <td>4.530525</td>\n","      <td>418.000000</td>\n","      <td>58.000000</td>\n","      <td>108.500000</td>\n","      <td>25.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>59.000000</td>\n","      <td>42.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>8020.000000</td>\n","      <td>1.401068e+06</td>\n","      <td>5.000000</td>\n","      <td>21281.000000</td>\n","      <td>1900.000000</td>\n","      <td>617.000000</td>\n","      <td>320.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>105.000000</td>\n","      <td>570.000000</td>\n","      <td>400.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-79b359f3-4b73-4c1b-bd1d-172d9c084ffc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-79b359f3-4b73-4c1b-bd1d-172d9c084ffc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-79b359f3-4b73-4c1b-bd1d-172d9c084ffc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-175a5985-0f1c-49ae-a793-aba0eaeefc04\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-175a5985-0f1c-49ae-a793-aba0eaeefc04')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-175a5985-0f1c-49ae-a793-aba0eaeefc04 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["\n","\n","> From the dataset we can see there are 8494 products in total, and there are some columns that has a large number of missing values. For those columns with large missing values or that are considered as helpless during clustering will be deleted.\n","\n"],"metadata":{"id":"E5zxxomk1je7"}},{"cell_type":"markdown","source":["<a id=\"sec2\"></a>\n","### 2. DataCleaning-Part1\n","#### Author: Alice Huang\n","- Column Deletion\n","- Correlation Analysis\n","- Feature Combination"],"metadata":{"id":"1BktouGGNBxf"}},{"cell_type":"code","source":["import pandas as pd\n","\n","df = product_df\n","\n","columns_to_delete = [\n","    'variation_type', 'value', 'variation_desc', 'limited edition',\n","    'child_count', 'child_max_price', 'child_min_price', 'out-of-stock',\n","    'secondary', 'tertiary category', 'size'\n","]\n","\n","product_df.drop(columns=columns_to_delete, inplace=True, errors='ignore')\n","\n","correlation = product_df['rating'].corr(product_df['reviews'])\n","print(f\"Correlation between 'rating' and 'reviews': {correlation}\")\n","product_df[\"first_nan\"]=product_df[\"primary_category\"].isnull()\n","product_df[\"second_nan\"]=product_df[\"secondary_category\"].isnull()\n","def combine_categories(row):\n","    if row['primary_category'] == 'Mini Size' or row[\"first_nan\"]==True:\n","      if(row[\"second_nan\"]!=True):\n","        return row['secondary_category']\n","      else:\n","        return row[\"tertiary_category\"]\n","    else:\n","        return row['primary_category']\n","\n","# Apply the function to each row and create a new column 'combined_category'\n","product_df['combined_category'] = product_df.apply(combine_categories, axis=1)\n","\n","# If you want to remove the original 'primary_category' and 'secondary_category' columns:\n","product_df.drop(columns=['primary_category', 'secondary_category'], inplace=True)\n","product_df.drop(columns=[\"first_nan\"],inplace=True)"],"metadata":{"id":"0N7ADhX_NE8A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696889603992,"user_tz":240,"elapsed":476,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"7d3e0c42-b273-4c77-c690-aaaf380b8f7e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Correlation between 'rating' and 'reviews': 0.06980134150212607\n"]}]},{"cell_type":"markdown","source":["### Data Cleaning-Part2\n","####Author: Rongzi Xie\n","-Correlation between numbers of review, prize and ratings"],"metadata":{"id":"z-aigx_E0HZK"}},{"cell_type":"code","source":["import seaborn as sns\n","from matplotlib.ticker import MultipleLocator\n","sns.pairplot(product_df[[\"rating\",\"reviews\",\"sale_price_usd\"]],corner=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":776},"id":"dKc9rWy3w2ri","executionInfo":{"status":"ok","timestamp":1696889610303,"user_tz":240,"elapsed":6457,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"9a16922b-6c17-4c20-ede0-297ec78bb6d9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.PairGrid at 0x78874fa46ef0>"]},"metadata":{},"execution_count":6},{"output_type":"display_data","data":{"text/plain":["<Figure size 750x750 with 9 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["The relationship between rating and sales_price_usd is not clear in the above pairplot. That might due to the fact that the most sale_price are all below 100. Below I changed the step of y axis."],"metadata":{"id":"j6dSqDx1cCnh"}},{"cell_type":"code","source":["import matplotlib as plt\n","plt.pyplot.scatter(product_df[\"rating\"],product_df[\"sale_price_usd\"])\n","plt.pyplot.yticks([0,25,50,75,100,125,150,175,200,225,250,275,300])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":907},"id":"MtIagHuWc7XA","executionInfo":{"status":"ok","timestamp":1696889610874,"user_tz":240,"elapsed":577,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"5a93c075-ed46-4039-f280-8c087bc80727"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["([<matplotlib.axis.YTick at 0x78874eba3940>,\n","  <matplotlib.axis.YTick at 0x78874eba32e0>,\n","  <matplotlib.axis.YTick at 0x78874eba2620>,\n","  <matplotlib.axis.YTick at 0x78874ebbf100>,\n","  <matplotlib.axis.YTick at 0x78874ebbfbb0>,\n","  <matplotlib.axis.YTick at 0x78874eba1d50>,\n","  <matplotlib.axis.YTick at 0x78874ebecb20>,\n","  <matplotlib.axis.YTick at 0x78874ebed5d0>,\n","  <matplotlib.axis.YTick at 0x78874ebee080>,\n","  <matplotlib.axis.YTick at 0x78874ebeeb30>,\n","  <matplotlib.axis.YTick at 0x78874ebed120>,\n","  <matplotlib.axis.YTick at 0x78874ebef280>,\n","  <matplotlib.axis.YTick at 0x78874ebefd30>],\n"," [Text(0, 0, '0'),\n","  Text(0, 25, '25'),\n","  Text(0, 50, '50'),\n","  Text(0, 75, '75'),\n","  Text(0, 100, '100'),\n","  Text(0, 125, '125'),\n","  Text(0, 150, '150'),\n","  Text(0, 175, '175'),\n","  Text(0, 200, '200'),\n","  Text(0, 225, '225'),\n","  Text(0, 250, '250'),\n","  Text(0, 275, '275'),\n","  Text(0, 300, '300')])"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#### Split list column:\n","- Highligh: Get important information from the list, for column highlight, it's \"Best of Beauty Award Winner\" and \"clean at sephora\"\n","- Ingredients: Find if there exist common ingredients in highly rated product\n","- size: Has been deleted"],"metadata":{"id":"woNe5QwMhMqM"}},{"cell_type":"code","source":["product_df[\"Award\"]=0\n","product_df[\"Clean at Sephora\"]=0\n","product_df[\"check_high+none\"]=product_df[\"highlights\"].isnull()\n","for index, row in product_df.iterrows():\n","  if(row[\"check_high+none\"]==False):\n","    for item in row[\"highlights\"]:\n","      if \"Best of Beauty Award Winner\" in item:\n","        row[\"Award\"]=1\n","      if \"clean at sephora\" in item:\n","        row[\"Clean at Sephora\"]=1\n"],"metadata":{"id":"7dx1EsCzkUzp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Threshold for high rating product:>4.2"],"metadata":{"id":"oJpovKyPqW1i"}},{"cell_type":"code","source":["#common_ingredients_generator(4.2,5)"],"metadata":{"id":"-J0vbhdLtNza"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(product_df[\"highlights\"].nunique())\n","print(product_df[\"ingredients\"].nunique())\n","print(product_df[\"combined_category\"].nunique())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v57vR64UBJx_","executionInfo":{"status":"ok","timestamp":1696889611987,"user_tz":240,"elapsed":304,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"e9a5d018-03aa-4fed-a817-6b96da44013e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4417\n","6538\n","9\n"]}]},{"cell_type":"markdown","source":["In order to get more information from highlights and ingredients column Split the dataset by different category. Also I do a onehot encoding for category since there are only 8 unique value."],"metadata":{"id":"lKMwgedFBqmY"}},{"cell_type":"code","source":["product_df[\"combined_category\"].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s-mgWnlqB1Wq","executionInfo":{"status":"ok","timestamp":1696889611989,"user_tz":240,"elapsed":16,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"7795f52e-d0b9-4375-d634-4bbfaf4a94d9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Fragrance', 'Bath & Body', 'Hair', 'Makeup', 'Skincare',\n","       'Tools & Brushes', 'Value & Gift Sets', 'Men', nan, 'Gifts'],\n","      dtype=object)"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["Non_category_product=product_df[product_df[\"combined_category\"].isnull()]\n","Non_category_product.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"yBOwHBbKCJeS","executionInfo":{"status":"ok","timestamp":1696889611990,"user_tz":240,"elapsed":13,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"aa942560-cfb9-49ea-f044-0bc29dc4a5a8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                 product_name  brand_id  \\\n","product_id                                                                \n","P445725     Mini Triple Action Cleansing Water - Cleanse +...      3902   \n","\n","                    brand_name  loves_count  rating  reviews  \\\n","product_id                                                     \n","P445725     SEPHORA COLLECTION         8025  3.9545     22.0   \n","\n","              variation_value  \\\n","product_id                      \n","P445725     1.69 fl oz/ 50 mL   \n","\n","                                                  ingredients  price_usd  \\\n","product_id                                                                 \n","P445725     ['Aqua (Water), Butylene Glycol, Glycerin, Pro...        7.0   \n","\n","            value_price_usd  ...  online_only  out_of_stock  \\\n","product_id                   ...                              \n","P445725                 NaN  ...            0             1   \n","\n","            sephora_exclusive  \\\n","product_id                      \n","P445725                     1   \n","\n","                                                   highlights  \\\n","product_id                                                      \n","P445725     ['Vegan', 'Good for: Pores', 'Clean + Planet P...   \n","\n","            tertiary_category  second_nan combined_category Award  \\\n","product_id                                                          \n","P445725                   NaN        True               NaN     0   \n","\n","            Clean at Sephora check_high+none  \n","product_id                                    \n","P445725                    0           False  \n","\n","[1 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-0932e9da-b538-4bd0-b0d2-fa3e408de499\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>product_name</th>\n","      <th>brand_id</th>\n","      <th>brand_name</th>\n","      <th>loves_count</th>\n","      <th>rating</th>\n","      <th>reviews</th>\n","      <th>variation_value</th>\n","      <th>ingredients</th>\n","      <th>price_usd</th>\n","      <th>value_price_usd</th>\n","      <th>...</th>\n","      <th>online_only</th>\n","      <th>out_of_stock</th>\n","      <th>sephora_exclusive</th>\n","      <th>highlights</th>\n","      <th>tertiary_category</th>\n","      <th>second_nan</th>\n","      <th>combined_category</th>\n","      <th>Award</th>\n","      <th>Clean at Sephora</th>\n","      <th>check_high+none</th>\n","    </tr>\n","    <tr>\n","      <th>product_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>P445725</th>\n","      <td>Mini Triple Action Cleansing Water - Cleanse +...</td>\n","      <td>3902</td>\n","      <td>SEPHORA COLLECTION</td>\n","      <td>8025</td>\n","      <td>3.9545</td>\n","      <td>22.0</td>\n","      <td>1.69 fl oz/ 50 mL</td>\n","      <td>['Aqua (Water), Butylene Glycol, Glycerin, Pro...</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>['Vegan', 'Good for: Pores', 'Clean + Planet P...</td>\n","      <td>NaN</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1 rows Ã— 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0932e9da-b538-4bd0-b0d2-fa3e408de499')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0932e9da-b538-4bd0-b0d2-fa3e408de499 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0932e9da-b538-4bd0-b0d2-fa3e408de499');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["After looking up the detail information of this product, I decide to put it into \"Skincare\" column.\n","https://www.sephora.com/ca/en/product/triple-action-cleansing-water-cleanse-purify-P445724"],"metadata":{"id":"G20Sy8YNGS_k"}},{"cell_type":"code","source":["product_df.loc['P445725',\"combined_category\"]=\"Skincare\"\n","product_df.drop(columns=[\"check_high+none\",\"second_nan\",\"tertiary_category\"],inplace=True)\n","Fragrance_product=product_df[product_df[\"combined_category\"]==\"Fragrance\"]\n","Bath_Body_product=product_df[product_df[\"combined_category\"]==\"Bath & Body\"]\n","Hair_product=product_df[product_df[\"combined_category\"]==\"Hair\"]\n","Makeup_product=product_df[product_df[\"combined_category\"]==\"Makeup\"]\n","Skincare_product=product_df[product_df[\"combined_category\"]==\"Skincare\"]\n","Tools_Brushes_product=product_df[product_df[\"combined_category\"]==\"Tools & Brushes\"]\n","Value_Gift_Sets_product=product_df[product_df[\"combined_category\"]==\"Value & Gift Sets\"]\n","Men_product=product_df[product_df[\"combined_category\"]==\"Men\"]\n","Gifts_product=product_df[product_df[\"combined_category\"]==\"Gifts\"]\n","product_df[\"combined_category\"].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r_sw5pOqphGp","executionInfo":{"status":"ok","timestamp":1696889611992,"user_tz":240,"elapsed":14,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"462e299b-aa48-4e54-d657-e6f042e7759d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Fragrance', 'Bath & Body', 'Hair', 'Makeup', 'Skincare',\n","       'Tools & Brushes', 'Value & Gift Sets', 'Men', 'Gifts'],\n","      dtype=object)"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["Now after splitting, we can check the common ingredients appeared in highly rated products for each types of the product.\n","- A question appeared: we still have to filter out some ingredients that are too common such as \"fragrance\". This step need further operation, but do we really need this step? Do we want to boost the product that has those ingredients but with slightly lower ratings?"],"metadata":{"id":"8OnWqmuuYai3"}},{"cell_type":"markdown","source":["#### One hot encoding: Category column"],"metadata":{"id":"iu1AT5BfnUSq"}},{"cell_type":"code","source":["from sklearn.preprocessing import OneHotEncoder\n","enc = OneHotEncoder(sparse=False)\n","df_enc = enc.fit_transform((product_df[\"combined_category\"].to_numpy().reshape(-1,1)))\n","df_enc=pd.DataFrame(df_enc)\n","df_enc.columns=enc.get_feature_names_out([\"combined_category\"])\n","df_enc.head()"],"metadata":{"id":"kAamsWKCFqg0","colab":{"base_uri":"https://localhost:8080/","height":280},"executionInfo":{"status":"ok","timestamp":1696889612199,"user_tz":240,"elapsed":218,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"fd6551cb-0ad7-4207-9cd8-bf60ebd8fdd8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["   combined_category_Bath & Body  combined_category_Fragrance  \\\n","0                            0.0                          1.0   \n","1                            0.0                          1.0   \n","2                            0.0                          1.0   \n","3                            0.0                          1.0   \n","4                            0.0                          1.0   \n","\n","   combined_category_Gifts  combined_category_Hair  combined_category_Makeup  \\\n","0                      0.0                     0.0                       0.0   \n","1                      0.0                     0.0                       0.0   \n","2                      0.0                     0.0                       0.0   \n","3                      0.0                     0.0                       0.0   \n","4                      0.0                     0.0                       0.0   \n","\n","   combined_category_Men  combined_category_Skincare  \\\n","0                    0.0                         0.0   \n","1                    0.0                         0.0   \n","2                    0.0                         0.0   \n","3                    0.0                         0.0   \n","4                    0.0                         0.0   \n","\n","   combined_category_Tools & Brushes  combined_category_Value & Gift Sets  \n","0                                0.0                                  0.0  \n","1                                0.0                                  0.0  \n","2                                0.0                                  0.0  \n","3                                0.0                                  0.0  \n","4                                0.0                                  0.0  "],"text/html":["\n","  <div id=\"df-9e9f9b76-42e0-4d83-967c-a786bc58cd9f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>combined_category_Bath &amp; Body</th>\n","      <th>combined_category_Fragrance</th>\n","      <th>combined_category_Gifts</th>\n","      <th>combined_category_Hair</th>\n","      <th>combined_category_Makeup</th>\n","      <th>combined_category_Men</th>\n","      <th>combined_category_Skincare</th>\n","      <th>combined_category_Tools &amp; Brushes</th>\n","      <th>combined_category_Value &amp; Gift Sets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e9f9b76-42e0-4d83-967c-a786bc58cd9f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9e9f9b76-42e0-4d83-967c-a786bc58cd9f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9e9f9b76-42e0-4d83-967c-a786bc58cd9f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e82d0a5f-f8dc-4968-b0f2-a157e86ad696\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e82d0a5f-f8dc-4968-b0f2-a157e86ad696')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e82d0a5f-f8dc-4968-b0f2-a157e86ad696 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["product_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":657},"id":"0mYxEOXc1ML0","executionInfo":{"status":"ok","timestamp":1696889612200,"user_tz":240,"elapsed":16,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"fa919c90-4db9-4f1d-c7f8-4ef778131269"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         product_name  brand_id brand_name  loves_count  \\\n","product_id                                                                \n","P473671       Fragrance Discovery Set      6342      19-69         6320   \n","P473668       La Habana Eau de Parfum      6342      19-69         3827   \n","P473662     Rainbow Bar Eau de Parfum      6342      19-69         3253   \n","P473660          Kasbah Eau de Parfum      6342      19-69         3018   \n","P473658     Purple Haze Eau de Parfum      6342      19-69         2691   \n","\n","            rating  reviews variation_value  \\\n","product_id                                    \n","P473671     3.6364     11.0             NaN   \n","P473668     4.1538     13.0  3.4 oz/ 100 mL   \n","P473662     4.2500     16.0  3.4 oz/ 100 mL   \n","P473660     4.4762     21.0  3.4 oz/ 100 mL   \n","P473658     3.2308     13.0  3.4 oz/ 100 mL   \n","\n","                                                  ingredients  price_usd  \\\n","product_id                                                                 \n","P473671     ['Capri Eau de Parfum:', 'Alcohol Denat. (SD A...       35.0   \n","P473668     ['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...      195.0   \n","P473662     ['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...      195.0   \n","P473660     ['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...      195.0   \n","P473658     ['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...      195.0   \n","\n","            value_price_usd  sale_price_usd  limited_edition  new  \\\n","product_id                                                          \n","P473671                 NaN             NaN                0    0   \n","P473668                 NaN             NaN                0    0   \n","P473662                 NaN             NaN                0    0   \n","P473660                 NaN             NaN                0    0   \n","P473658                 NaN             NaN                0    0   \n","\n","            online_only  out_of_stock  sephora_exclusive  \\\n","product_id                                                 \n","P473671               1             0                  0   \n","P473668               1             0                  0   \n","P473662               1             0                  0   \n","P473660               1             0                  0   \n","P473658               1             0                  0   \n","\n","                                                   highlights  \\\n","product_id                                                      \n","P473671     ['Unisex/ Genderless Scent', 'Warm &Spicy Scen...   \n","P473668     ['Unisex/ Genderless Scent', 'Layerable Scent'...   \n","P473662     ['Unisex/ Genderless Scent', 'Layerable Scent'...   \n","P473660     ['Unisex/ Genderless Scent', 'Layerable Scent'...   \n","P473658     ['Unisex/ Genderless Scent', 'Layerable Scent'...   \n","\n","           combined_category  Award  Clean at Sephora  \n","product_id                                             \n","P473671            Fragrance      0                 0  \n","P473668            Fragrance      0                 0  \n","P473662            Fragrance      0                 0  \n","P473660            Fragrance      0                 0  \n","P473658            Fragrance      0                 0  "],"text/html":["\n","  <div id=\"df-1fe548eb-66b5-40d9-966a-4d7b02b183f5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>product_name</th>\n","      <th>brand_id</th>\n","      <th>brand_name</th>\n","      <th>loves_count</th>\n","      <th>rating</th>\n","      <th>reviews</th>\n","      <th>variation_value</th>\n","      <th>ingredients</th>\n","      <th>price_usd</th>\n","      <th>value_price_usd</th>\n","      <th>sale_price_usd</th>\n","      <th>limited_edition</th>\n","      <th>new</th>\n","      <th>online_only</th>\n","      <th>out_of_stock</th>\n","      <th>sephora_exclusive</th>\n","      <th>highlights</th>\n","      <th>combined_category</th>\n","      <th>Award</th>\n","      <th>Clean at Sephora</th>\n","    </tr>\n","    <tr>\n","      <th>product_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>P473671</th>\n","      <td>Fragrance Discovery Set</td>\n","      <td>6342</td>\n","      <td>19-69</td>\n","      <td>6320</td>\n","      <td>3.6364</td>\n","      <td>11.0</td>\n","      <td>NaN</td>\n","      <td>['Capri Eau de Parfum:', 'Alcohol Denat. (SD A...</td>\n","      <td>35.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Unisex/ Genderless Scent', 'Warm &amp;Spicy Scen...</td>\n","      <td>Fragrance</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>P473668</th>\n","      <td>La Habana Eau de Parfum</td>\n","      <td>6342</td>\n","      <td>19-69</td>\n","      <td>3827</td>\n","      <td>4.1538</td>\n","      <td>13.0</td>\n","      <td>3.4 oz/ 100 mL</td>\n","      <td>['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...</td>\n","      <td>195.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Unisex/ Genderless Scent', 'Layerable Scent'...</td>\n","      <td>Fragrance</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>P473662</th>\n","      <td>Rainbow Bar Eau de Parfum</td>\n","      <td>6342</td>\n","      <td>19-69</td>\n","      <td>3253</td>\n","      <td>4.2500</td>\n","      <td>16.0</td>\n","      <td>3.4 oz/ 100 mL</td>\n","      <td>['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...</td>\n","      <td>195.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Unisex/ Genderless Scent', 'Layerable Scent'...</td>\n","      <td>Fragrance</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>P473660</th>\n","      <td>Kasbah Eau de Parfum</td>\n","      <td>6342</td>\n","      <td>19-69</td>\n","      <td>3018</td>\n","      <td>4.4762</td>\n","      <td>21.0</td>\n","      <td>3.4 oz/ 100 mL</td>\n","      <td>['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...</td>\n","      <td>195.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Unisex/ Genderless Scent', 'Layerable Scent'...</td>\n","      <td>Fragrance</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>P473658</th>\n","      <td>Purple Haze Eau de Parfum</td>\n","      <td>6342</td>\n","      <td>19-69</td>\n","      <td>2691</td>\n","      <td>3.2308</td>\n","      <td>13.0</td>\n","      <td>3.4 oz/ 100 mL</td>\n","      <td>['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...</td>\n","      <td>195.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Unisex/ Genderless Scent', 'Layerable Scent'...</td>\n","      <td>Fragrance</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1fe548eb-66b5-40d9-966a-4d7b02b183f5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1fe548eb-66b5-40d9-966a-4d7b02b183f5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1fe548eb-66b5-40d9-966a-4d7b02b183f5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-871099da-0c0c-45cd-a811-006ca6e122fd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-871099da-0c0c-45cd-a811-006ca6e122fd')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-871099da-0c0c-45cd-a811-006ca6e122fd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["#product_df=product_df.drop(labels=\"combined_category\",axis=1)\n","df_enc.set_index(product_df.index, inplace=True)\n","product_df=pd.concat([product_df,df_enc],axis=1)\n","product_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":669},"id":"8xHW-Hlqt1qT","executionInfo":{"status":"ok","timestamp":1696889612366,"user_tz":240,"elapsed":180,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"b18181d2-0e86-4c21-d985-512fa5f49aeb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         product_name  brand_id brand_name  loves_count  \\\n","product_id                                                                \n","P473671       Fragrance Discovery Set      6342      19-69         6320   \n","P473668       La Habana Eau de Parfum      6342      19-69         3827   \n","P473662     Rainbow Bar Eau de Parfum      6342      19-69         3253   \n","P473660          Kasbah Eau de Parfum      6342      19-69         3018   \n","P473658     Purple Haze Eau de Parfum      6342      19-69         2691   \n","\n","            rating  reviews variation_value  \\\n","product_id                                    \n","P473671     3.6364     11.0             NaN   \n","P473668     4.1538     13.0  3.4 oz/ 100 mL   \n","P473662     4.2500     16.0  3.4 oz/ 100 mL   \n","P473660     4.4762     21.0  3.4 oz/ 100 mL   \n","P473658     3.2308     13.0  3.4 oz/ 100 mL   \n","\n","                                                  ingredients  price_usd  \\\n","product_id                                                                 \n","P473671     ['Capri Eau de Parfum:', 'Alcohol Denat. (SD A...       35.0   \n","P473668     ['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...      195.0   \n","P473662     ['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...      195.0   \n","P473660     ['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...      195.0   \n","P473658     ['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...      195.0   \n","\n","            value_price_usd  ...  Clean at Sephora  \\\n","product_id                   ...                     \n","P473671                 NaN  ...                 0   \n","P473668                 NaN  ...                 0   \n","P473662                 NaN  ...                 0   \n","P473660                 NaN  ...                 0   \n","P473658                 NaN  ...                 0   \n","\n","            combined_category_Bath & Body  combined_category_Fragrance  \\\n","product_id                                                               \n","P473671                               0.0                          1.0   \n","P473668                               0.0                          1.0   \n","P473662                               0.0                          1.0   \n","P473660                               0.0                          1.0   \n","P473658                               0.0                          1.0   \n","\n","            combined_category_Gifts  combined_category_Hair  \\\n","product_id                                                    \n","P473671                         0.0                     0.0   \n","P473668                         0.0                     0.0   \n","P473662                         0.0                     0.0   \n","P473660                         0.0                     0.0   \n","P473658                         0.0                     0.0   \n","\n","            combined_category_Makeup combined_category_Men  \\\n","product_id                                                   \n","P473671                          0.0                   0.0   \n","P473668                          0.0                   0.0   \n","P473662                          0.0                   0.0   \n","P473660                          0.0                   0.0   \n","P473658                          0.0                   0.0   \n","\n","           combined_category_Skincare  combined_category_Tools & Brushes  \\\n","product_id                                                                 \n","P473671                           0.0                                0.0   \n","P473668                           0.0                                0.0   \n","P473662                           0.0                                0.0   \n","P473660                           0.0                                0.0   \n","P473658                           0.0                                0.0   \n","\n","            combined_category_Value & Gift Sets  \n","product_id                                       \n","P473671                                     0.0  \n","P473668                                     0.0  \n","P473662                                     0.0  \n","P473660                                     0.0  \n","P473658                                     0.0  \n","\n","[5 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-c9be4c90-51da-4a8b-87b1-9ffa6311634d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>product_name</th>\n","      <th>brand_id</th>\n","      <th>brand_name</th>\n","      <th>loves_count</th>\n","      <th>rating</th>\n","      <th>reviews</th>\n","      <th>variation_value</th>\n","      <th>ingredients</th>\n","      <th>price_usd</th>\n","      <th>value_price_usd</th>\n","      <th>...</th>\n","      <th>Clean at Sephora</th>\n","      <th>combined_category_Bath &amp; Body</th>\n","      <th>combined_category_Fragrance</th>\n","      <th>combined_category_Gifts</th>\n","      <th>combined_category_Hair</th>\n","      <th>combined_category_Makeup</th>\n","      <th>combined_category_Men</th>\n","      <th>combined_category_Skincare</th>\n","      <th>combined_category_Tools &amp; Brushes</th>\n","      <th>combined_category_Value &amp; Gift Sets</th>\n","    </tr>\n","    <tr>\n","      <th>product_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>P473671</th>\n","      <td>Fragrance Discovery Set</td>\n","      <td>6342</td>\n","      <td>19-69</td>\n","      <td>6320</td>\n","      <td>3.6364</td>\n","      <td>11.0</td>\n","      <td>NaN</td>\n","      <td>['Capri Eau de Parfum:', 'Alcohol Denat. (SD A...</td>\n","      <td>35.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>P473668</th>\n","      <td>La Habana Eau de Parfum</td>\n","      <td>6342</td>\n","      <td>19-69</td>\n","      <td>3827</td>\n","      <td>4.1538</td>\n","      <td>13.0</td>\n","      <td>3.4 oz/ 100 mL</td>\n","      <td>['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...</td>\n","      <td>195.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>P473662</th>\n","      <td>Rainbow Bar Eau de Parfum</td>\n","      <td>6342</td>\n","      <td>19-69</td>\n","      <td>3253</td>\n","      <td>4.2500</td>\n","      <td>16.0</td>\n","      <td>3.4 oz/ 100 mL</td>\n","      <td>['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...</td>\n","      <td>195.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>P473660</th>\n","      <td>Kasbah Eau de Parfum</td>\n","      <td>6342</td>\n","      <td>19-69</td>\n","      <td>3018</td>\n","      <td>4.4762</td>\n","      <td>21.0</td>\n","      <td>3.4 oz/ 100 mL</td>\n","      <td>['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...</td>\n","      <td>195.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>P473658</th>\n","      <td>Purple Haze Eau de Parfum</td>\n","      <td>6342</td>\n","      <td>19-69</td>\n","      <td>2691</td>\n","      <td>3.2308</td>\n","      <td>13.0</td>\n","      <td>3.4 oz/ 100 mL</td>\n","      <td>['Alcohol Denat. (SD Alcohol 39C), Parfum (Fra...</td>\n","      <td>195.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9be4c90-51da-4a8b-87b1-9ffa6311634d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c9be4c90-51da-4a8b-87b1-9ffa6311634d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c9be4c90-51da-4a8b-87b1-9ffa6311634d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6932f20a-beba-4783-a412-2f382bf20080\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6932f20a-beba-4783-a412-2f382bf20080')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6932f20a-beba-4783-a412-2f382bf20080 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["#### Export dataframe to csvs"],"metadata":{"id":"mai-XsX32zwA"}},{"cell_type":"code","source":["Skincare_product_research = Bath_Body_product.dropna(subset=['ingredients'])\n","Skincare_product_research['ingredients'] = Skincare_product_research['ingredients'].str.split(',')\n","Skincare_product_research = Skincare_product_research['ingredients'].explode()\n","#Skincare_product_research[0]=Skincare_product_research[0].strip('[')\n","Skincare_product_research.head()\n","# print(Skincare_product_research[0].dtype())\n","#Skincare_product_specific=Skincare_product_research[(\"Melaleuca alternifolia\") in Skincare_product_research[0]]\n","#Skincare_product_specific=Skincare_product_research[\"Retinol\" in Skincare_product_research[0]]\n","pattern=r'(?i)(Simmondsia\\s*\\w*)'\n","Skincare_product_specific=Skincare_product_research.str.extract(pattern)\n","print(Skincare_product_specific.dropna())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DsZ6hs8NJka2","executionInfo":{"status":"ok","timestamp":1696889612547,"user_tz":240,"elapsed":190,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"d7a77861-c132-46a8-8ba3-09bca7f93355"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-17-a0736885cb30>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  Skincare_product_research['ingredients'] = Skincare_product_research['ingredients'].str.split(',')\n"]},{"output_type":"stream","name":"stdout","text":["                               0\n","product_id                      \n","P476416     Simmondsia Chinensis\n","P476418     Simmondsia Chinensis\n","P476418     Simmondsia Chinensis\n","P476418     Simmondsia Chinensis\n","P476417     Simmondsia Chinensis\n","...                          ...\n","P474123     Simmondsia Chinensis\n","P392001     Simmondsia Chinensis\n","P502491     Simmondsia Chinensis\n","P450195     Simmondsia Chinensis\n","P476750     Simmondsia Chinensis\n","\n","[70 rows x 1 columns]\n"]}]},{"cell_type":"code","source":["import re\n","ingredient_list=[r'(?i)(Ascorbyl\\s*\\w*)',\n","                 r'(?i)(retinol\\s*\\w*)',\n","                 r'(?i)(ceramide\\s*\\w*)',\n","                 r'(?i)(lactic\\s*acid\\w*)',\n","                 r'(?i)(Squalane\\s*\\w*)',\n","                 r'(?i)(Aloe\\s*\\w*)',\n","                 r'(?i)(Salicylic\\s*\\w*)',\n","                 r'(?i)(Butyrospermum|Shea\\s*Parkii\\w*)',\n","                 r'(?i)(tocopherol\\s*\\w*)',\n","                 r'(?i)(jojoba\\s*\\w*)',\n","                 r'(?i)(peppermint\\s*\\w*)',\n","                 r'(?i)(honey\\s*\\w*|miel\\s*\\w*)',\n","                 r'(?i)(Phenoxyethanol\\s*\\w*)',\n","                 r'(?i)(rose\\s*\\w*)',]\n","ingredients_name=[\"Ascorbyl Glucoside\",\"Retinol\",\"Ceramide\",\"Lactic acid\",\"Squalane\",\"Aloe\",\"Salicylic Acid\",\"Shea\",\"Vitamin E/tocopherols\",\"jojoba\",\"peppermint\",\"honey/miel\",\"Phenoxyethanol\",\"Rose\"]\n","ingredients_dict={ingredients_name[i]: ingredient_list[i] for i in range(len(ingredient_list))}\n","print(ingredients_dict)\n","for key in ingredients_dict:\n","  product_df[key]=np.where(product_df[\"ingredients\"].str.extract(ingredients_dict[key]).isnull(), 0,1)\n","  print(key,len(product_df[key][product_df[key]==1]))\n","print(len(product_df))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XjjsCPAWKsqH","executionInfo":{"status":"ok","timestamp":1696889616078,"user_tz":240,"elapsed":3537,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"71d084ca-71b7-486c-e346-9c080d5f4671"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Ascorbyl Glucoside': '(?i)(Ascorbyl\\\\s*\\\\w*)', 'Retinol': '(?i)(retinol\\\\s*\\\\w*)', 'Ceramide': '(?i)(ceramide\\\\s*\\\\w*)', 'Lactic acid': '(?i)(lactic\\\\s*acid\\\\w*)', 'Squalane': '(?i)(Squalane\\\\s*\\\\w*)', 'Aloe': '(?i)(Aloe\\\\s*\\\\w*)', 'Salicylic Acid': '(?i)(Salicylic\\\\s*\\\\w*)', 'Shea': '(?i)(Butyrospermum|Shea\\\\s*Parkii\\\\w*)', 'Vitamin E/tocopherols': '(?i)(tocopherol\\\\s*\\\\w*)', 'jojoba': '(?i)(jojoba\\\\s*\\\\w*)', 'peppermint': '(?i)(peppermint\\\\s*\\\\w*)', 'honey/miel': '(?i)(honey\\\\s*\\\\w*|miel\\\\s*\\\\w*)', 'Phenoxyethanol': '(?i)(Phenoxyethanol\\\\s*\\\\w*)', 'Rose': '(?i)(rose\\\\s*\\\\w*)'}\n","Ascorbyl Glucoside 641\n","Retinol 106\n","Ceramide 304\n","Lactic acid 555\n","Squalane 962\n","Aloe 1008\n","Salicylic Acid 403\n","Shea 937\n","Vitamin E/tocopherols 2642\n","jojoba 1021\n","peppermint 177\n","honey/miel 230\n","Phenoxyethanol 3450\n","Rose 1208\n","8494\n"]}]},{"cell_type":"code","source":["def normalize(arr, t_min, t_max):\n","    norm_arr = []\n","    diff = t_max - t_min\n","    diff_arr = max(arr) - min(arr)\n","    for i in arr:\n","        temp = (((i - min(arr))*diff)/diff_arr) + t_min\n","        norm_arr.append(temp)\n","    return norm_arr\n","product_df[\"loves_count\"] = normalize(product_df[\"loves_count\"],0,1)\n","product_df[\"reviews\"] = normalize(product_df[\"reviews\"],0,1)"],"metadata":{"id":"eGEb2Aocew4y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["product_df.head()\n","product_df=product_df.drop(axis=1,labels=[\"ingredients\",\"variation_value\",\"price_usd\",\"value_price_usd\",\"sale_price_usd\",\"highlights\"])\n","Fragrance_product=product_df[product_df[\"combined_category\"]==\"Fragrance\"]\n","Bath_Body_product=product_df[product_df[\"combined_category\"]==\"Bath & Body\"]\n","Hair_product=product_df[product_df[\"combined_category\"]==\"Hair\"]\n","Makeup_product=product_df[product_df[\"combined_category\"]==\"Makeup\"]\n","Skincare_product=product_df[product_df[\"combined_category\"]==\"Skincare\"]\n","Tools_Brushes_product=product_df[product_df[\"combined_category\"]==\"Tools & Brushes\"]\n","Value_Gift_Sets_product=product_df[product_df[\"combined_category\"]==\"Value & Gift Sets\"]\n","Men_product=product_df[product_df[\"combined_category\"]==\"Men\"]\n","Gifts_product=product_df[product_df[\"combined_category\"]==\"Gifts\"]\n","product_df=product_df.drop(labels=\"combined_category\",axis=1)\n","product_df.to_csv('/content/drive/MyDrive/Accenture (BOS) - Improving Customer Experience in Skincare Through ML-Based Product Recommendations (Team B)/Data Cleaning/rongzi/Data/product_info_clean.csv', index=True)\n"],"metadata":{"id":"C1w_XFmiOBFk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["product_df.to_csv('/content/drive/MyDrive/Accenture (BOS) - Improving Customer Experience in Skincare Through ML-Based Product Recommendations (Team B)/Data Cleaning/rongzi/Data/product_info_clean.csv', index=True)\n","Fragrance_product.to_csv('/content/drive/MyDrive/Accenture (BOS) - Improving Customer Experience in Skincare Through ML-Based Product Recommendations (Team B)/Data Cleaning/rongzi/Data/Fragrance_product.csv', index=True)\n","Bath_Body_product.to_csv('/content/drive/MyDrive/Accenture (BOS) - Improving Customer Experience in Skincare Through ML-Based Product Recommendations (Team B)/Data Cleaning/rongzi/Data/Bath_Body_product.csv', index=True)\n","Hair_product.to_csv('/content/drive/MyDrive/Accenture (BOS) - Improving Customer Experience in Skincare Through ML-Based Product Recommendations (Team B)/Data Cleaning/rongzi/Data/Hair_product.csv', index=True)\n","Makeup_product.to_csv('/content/drive/MyDrive/Accenture (BOS) - Improving Customer Experience in Skincare Through ML-Based Product Recommendations (Team B)/Data Cleaning/rongzi/Data/Makeup_product.csv', index=True)\n","Skincare_product.to_csv('/content/drive/MyDrive/Accenture (BOS) - Improving Customer Experience in Skincare Through ML-Based Product Recommendations (Team B)/Data Cleaning/rongzi/Data/Skincare_product.csv', index=True)\n","Tools_Brushes_product.to_csv('/content/drive/MyDrive/Accenture (BOS) - Improving Customer Experience in Skincare Through ML-Based Product Recommendations (Team B)/Data Cleaning/rongzi/Data/Tools_Brushes_product.csv', index=True)\n","Value_Gift_Sets_product.to_csv('/content/drive/MyDrive/Accenture (BOS) - Improving Customer Experience in Skincare Through ML-Based Product Recommendations (Team B)/Data Cleaning/rongzi/Data/Value_Gift_Sets_product.csv', index=True)\n","Men_product.to_csv('/content/drive/MyDrive/Accenture (BOS) - Improving Customer Experience in Skincare Through ML-Based Product Recommendations (Team B)/Data Cleaning/rongzi/Data/Men_product.csv', index=True)\n","Gifts_product.to_csv('/content/drive/MyDrive/Accenture (BOS) - Improving Customer Experience in Skincare Through ML-Based Product Recommendations (Team B)/Data Cleaning/rongzi/Data/Gifts_product.csv', index=True)"],"metadata":{"id":"aRusnW4h257x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"PR6wAdF9WIAl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# def common_ingredients_generator(product_df,rating_threshold,times):\n","#     highly_rated_products = product_df[product_df['rating'] >= rating_threshold]\n","#     highly_rated_products = highly_rated_products.dropna(subset=['ingredients'])\n","#     highly_rated_products['ingredients'] = highly_rated_products['ingredients'].str.split(',')\n","#     ingredients_series = highly_rated_products['ingredients'].explode()\n","#     ingredient_counts = ingredients_series.value_counts()\n","#     common_ingredients = set(ingredient_counts[ingredient_counts > times].index)\n","#     return common_ingredients\n","# common_ingredient=[x.strip() for x in list(common_ingredients_generator(Fragrance_product,0,800))]\n","# print(common_ingredient)"],"metadata":{"id":"ir4poo3nlf_L"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# def add_one_hot_encoding_ingredients(df,ingredients):\n","#   for i in ingredients:\n","#     df[i]=np.where(i in df.loc[:,\"ingredients\"][0], 1,0)\n","# add_one_hot_encoding_ingredients(Fragrance_product,common_ingredient)"],"metadata":{"id":"pAz0Xkq9am4Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Fragrance_product.head()"],"metadata":{"id":"WPh7BxhUcjKi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# df_list=[Hair_product,Fragrance_product,Bath_Body_product,Makeup_product,Skincare_product,Tools_Brushes_product,Value_Gift_Sets_product,Men_product]\n","# for df in df_list:\n","#   ingredients=common_ingredients_generator(df,0,df.shape[0]/1.9)\n","#   print(ingredients)\n","#   add_one_hot_encoding_ingredients(df,ingredients)"],"metadata":{"id":"j5zAWdRDclSi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Hair_product.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"FQicgyVHgjaR","executionInfo":{"status":"ok","timestamp":1696889640563,"user_tz":240,"elapsed":9,"user":{"displayName":"Rongzi Xie","userId":"05314108684841635974"}},"outputId":"8a7b9ee5-8602-4e09-cc51-9517875bacd4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                       product_name  brand_id    brand_name  \\\n","product_id                                                                    \n","P457232         Baomint Deep Conditioning Treatment      6321  adwoa beauty   \n","P474806                  Blue Tansy Reparative Mask      6321  adwoa beauty   \n","P457233        Baomint Leave In Conditioning Styler      6321  adwoa beauty   \n","P474808     Blue Tansy Leave in Conditioning Styler      6321  adwoa beauty   \n","P457234                Baomint Moisturizing Shampoo      6321  adwoa beauty   \n","\n","            loves_count  rating   reviews  limited_edition  new  online_only  \\\n","product_id                                                                     \n","P457232        0.012096  4.5273  0.014568                0    0            0   \n","P474806        0.010463  4.7581  0.023073                0    0            0   \n","P457233        0.009516  4.3472  0.006720                0    0            0   \n","P474808        0.008332  4.5762  0.009821                0    0            0   \n","P457234        0.007938  4.1324  0.006344                0    0            0   \n","\n","            out_of_stock  ...  Squalane Aloe  Salicylic Acid  Shea  \\\n","product_id                ...                                        \n","P457232                0  ...         0    0               0     1   \n","P474806                0  ...         0    0               0     1   \n","P457233                0  ...         0    1               0     1   \n","P474808                0  ...         0    1               0     1   \n","P457234                0  ...         0    1               0     0   \n","\n","            Vitamin E/tocopherols  jojoba  peppermint  honey/miel  \\\n","product_id                                                          \n","P457232                         0       0           1           0   \n","P474806                         0       1           0           0   \n","P457233                         0       0           1           0   \n","P474808                         0       1           0           0   \n","P457234                         0       0           1           0   \n","\n","            Phenoxyethanol  Rose  \n","product_id                        \n","P457232                  1     1  \n","P474806                  1     0  \n","P457233                  0     1  \n","P474808                  0     0  \n","P457234                  0     1  \n","\n","[5 rows x 37 columns]"],"text/html":["\n","  <div id=\"df-391c5048-5038-451d-a85c-170e7c401739\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>product_name</th>\n","      <th>brand_id</th>\n","      <th>brand_name</th>\n","      <th>loves_count</th>\n","      <th>rating</th>\n","      <th>reviews</th>\n","      <th>limited_edition</th>\n","      <th>new</th>\n","      <th>online_only</th>\n","      <th>out_of_stock</th>\n","      <th>...</th>\n","      <th>Squalane</th>\n","      <th>Aloe</th>\n","      <th>Salicylic Acid</th>\n","      <th>Shea</th>\n","      <th>Vitamin E/tocopherols</th>\n","      <th>jojoba</th>\n","      <th>peppermint</th>\n","      <th>honey/miel</th>\n","      <th>Phenoxyethanol</th>\n","      <th>Rose</th>\n","    </tr>\n","    <tr>\n","      <th>product_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>P457232</th>\n","      <td>Baomint Deep Conditioning Treatment</td>\n","      <td>6321</td>\n","      <td>adwoa beauty</td>\n","      <td>0.012096</td>\n","      <td>4.5273</td>\n","      <td>0.014568</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>P474806</th>\n","      <td>Blue Tansy Reparative Mask</td>\n","      <td>6321</td>\n","      <td>adwoa beauty</td>\n","      <td>0.010463</td>\n","      <td>4.7581</td>\n","      <td>0.023073</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>P457233</th>\n","      <td>Baomint Leave In Conditioning Styler</td>\n","      <td>6321</td>\n","      <td>adwoa beauty</td>\n","      <td>0.009516</td>\n","      <td>4.3472</td>\n","      <td>0.006720</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>P474808</th>\n","      <td>Blue Tansy Leave in Conditioning Styler</td>\n","      <td>6321</td>\n","      <td>adwoa beauty</td>\n","      <td>0.008332</td>\n","      <td>4.5762</td>\n","      <td>0.009821</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>P457234</th>\n","      <td>Baomint Moisturizing Shampoo</td>\n","      <td>6321</td>\n","      <td>adwoa beauty</td>\n","      <td>0.007938</td>\n","      <td>4.1324</td>\n","      <td>0.006344</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 37 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-391c5048-5038-451d-a85c-170e7c401739')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-391c5048-5038-451d-a85c-170e7c401739 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-391c5048-5038-451d-a85c-170e7c401739');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-392f2c49-1a45-4ce3-9679-1e9fb72c7f9c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-392f2c49-1a45-4ce3-9679-1e9fb72c7f9c')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-392f2c49-1a45-4ce3-9679-1e9fb72c7f9c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":[],"metadata":{"id":"iMRrK_kpjPHB"},"execution_count":null,"outputs":[]}]}